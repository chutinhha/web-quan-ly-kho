//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QLCV.BaoCaoThongKe {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsReport : global::System.Data.DataSet {
        
        private SP_DoiTac_Vung_SelectDataTable tableSP_DoiTac_Vung_Select;
        
        private KeHoachNhapXuatDataTable tableKeHoachNhapXuat;
        
        private NhatKyCaiDatPMDataTable tableNhatKyCaiDatPM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SP_DoiTac_Vung_Select"] != null)) {
                    base.Tables.Add(new SP_DoiTac_Vung_SelectDataTable(ds.Tables["SP_DoiTac_Vung_Select"]));
                }
                if ((ds.Tables["KeHoachNhapXuat"] != null)) {
                    base.Tables.Add(new KeHoachNhapXuatDataTable(ds.Tables["KeHoachNhapXuat"]));
                }
                if ((ds.Tables["NhatKyCaiDatPM"] != null)) {
                    base.Tables.Add(new NhatKyCaiDatPMDataTable(ds.Tables["NhatKyCaiDatPM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_DoiTac_Vung_SelectDataTable SP_DoiTac_Vung_Select {
            get {
                return this.tableSP_DoiTac_Vung_Select;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KeHoachNhapXuatDataTable KeHoachNhapXuat {
            get {
                return this.tableKeHoachNhapXuat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NhatKyCaiDatPMDataTable NhatKyCaiDatPM {
            get {
                return this.tableNhatKyCaiDatPM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsReport cln = ((dsReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SP_DoiTac_Vung_Select"] != null)) {
                    base.Tables.Add(new SP_DoiTac_Vung_SelectDataTable(ds.Tables["SP_DoiTac_Vung_Select"]));
                }
                if ((ds.Tables["KeHoachNhapXuat"] != null)) {
                    base.Tables.Add(new KeHoachNhapXuatDataTable(ds.Tables["KeHoachNhapXuat"]));
                }
                if ((ds.Tables["NhatKyCaiDatPM"] != null)) {
                    base.Tables.Add(new NhatKyCaiDatPMDataTable(ds.Tables["NhatKyCaiDatPM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSP_DoiTac_Vung_Select = ((SP_DoiTac_Vung_SelectDataTable)(base.Tables["SP_DoiTac_Vung_Select"]));
            if ((initTable == true)) {
                if ((this.tableSP_DoiTac_Vung_Select != null)) {
                    this.tableSP_DoiTac_Vung_Select.InitVars();
                }
            }
            this.tableKeHoachNhapXuat = ((KeHoachNhapXuatDataTable)(base.Tables["KeHoachNhapXuat"]));
            if ((initTable == true)) {
                if ((this.tableKeHoachNhapXuat != null)) {
                    this.tableKeHoachNhapXuat.InitVars();
                }
            }
            this.tableNhatKyCaiDatPM = ((NhatKyCaiDatPMDataTable)(base.Tables["NhatKyCaiDatPM"]));
            if ((initTable == true)) {
                if ((this.tableNhatKyCaiDatPM != null)) {
                    this.tableNhatKyCaiDatPM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSP_DoiTac_Vung_Select = new SP_DoiTac_Vung_SelectDataTable();
            base.Tables.Add(this.tableSP_DoiTac_Vung_Select);
            this.tableKeHoachNhapXuat = new KeHoachNhapXuatDataTable();
            base.Tables.Add(this.tableKeHoachNhapXuat);
            this.tableNhatKyCaiDatPM = new NhatKyCaiDatPMDataTable();
            base.Tables.Add(this.tableNhatKyCaiDatPM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSP_DoiTac_Vung_Select() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKeHoachNhapXuat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNhatKyCaiDatPM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsReport ds = new dsReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SP_DoiTac_Vung_SelectRowChangeEventHandler(object sender, SP_DoiTac_Vung_SelectRowChangeEvent e);
        
        public delegate void KeHoachNhapXuatRowChangeEventHandler(object sender, KeHoachNhapXuatRowChangeEvent e);
        
        public delegate void NhatKyCaiDatPMRowChangeEventHandler(object sender, NhatKyCaiDatPMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_DoiTac_Vung_SelectDataTable : global::System.Data.TypedTableBase<SP_DoiTac_Vung_SelectRow> {
            
            private global::System.Data.DataColumn columnDoiTac_Vung_Id;
            
            private global::System.Data.DataColumn columnTenDoiTac;
            
            private global::System.Data.DataColumn columnTenVung;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_DoiTac_Vung_SelectDataTable() {
                this.TableName = "SP_DoiTac_Vung_Select";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SP_DoiTac_Vung_SelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SP_DoiTac_Vung_SelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoiTac_Vung_IdColumn {
                get {
                    return this.columnDoiTac_Vung_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenDoiTacColumn {
                get {
                    return this.columnTenDoiTac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenVungColumn {
                get {
                    return this.columnTenVung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_DoiTac_Vung_SelectRow this[int index] {
                get {
                    return ((SP_DoiTac_Vung_SelectRow)(this.Rows[index]));
                }
            }
            
            public event SP_DoiTac_Vung_SelectRowChangeEventHandler SP_DoiTac_Vung_SelectRowChanging;
            
            public event SP_DoiTac_Vung_SelectRowChangeEventHandler SP_DoiTac_Vung_SelectRowChanged;
            
            public event SP_DoiTac_Vung_SelectRowChangeEventHandler SP_DoiTac_Vung_SelectRowDeleting;
            
            public event SP_DoiTac_Vung_SelectRowChangeEventHandler SP_DoiTac_Vung_SelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSP_DoiTac_Vung_SelectRow(SP_DoiTac_Vung_SelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_DoiTac_Vung_SelectRow AddSP_DoiTac_Vung_SelectRow(System.Guid DoiTac_Vung_Id, string TenDoiTac, string TenVung) {
                SP_DoiTac_Vung_SelectRow rowSP_DoiTac_Vung_SelectRow = ((SP_DoiTac_Vung_SelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DoiTac_Vung_Id,
                        TenDoiTac,
                        TenVung};
                rowSP_DoiTac_Vung_SelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_DoiTac_Vung_SelectRow);
                return rowSP_DoiTac_Vung_SelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SP_DoiTac_Vung_SelectDataTable cln = ((SP_DoiTac_Vung_SelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_DoiTac_Vung_SelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoiTac_Vung_Id = base.Columns["DoiTac_Vung_Id"];
                this.columnTenDoiTac = base.Columns["TenDoiTac"];
                this.columnTenVung = base.Columns["TenVung"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoiTac_Vung_Id = new global::System.Data.DataColumn("DoiTac_Vung_Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoiTac_Vung_Id);
                this.columnTenDoiTac = new global::System.Data.DataColumn("TenDoiTac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDoiTac);
                this.columnTenVung = new global::System.Data.DataColumn("TenVung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenVung);
                this.columnDoiTac_Vung_Id.AllowDBNull = false;
                this.columnTenDoiTac.MaxLength = 100;
                this.columnTenVung.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_DoiTac_Vung_SelectRow NewSP_DoiTac_Vung_SelectRow() {
                return ((SP_DoiTac_Vung_SelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_DoiTac_Vung_SelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SP_DoiTac_Vung_SelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_DoiTac_Vung_SelectRowChanged != null)) {
                    this.SP_DoiTac_Vung_SelectRowChanged(this, new SP_DoiTac_Vung_SelectRowChangeEvent(((SP_DoiTac_Vung_SelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_DoiTac_Vung_SelectRowChanging != null)) {
                    this.SP_DoiTac_Vung_SelectRowChanging(this, new SP_DoiTac_Vung_SelectRowChangeEvent(((SP_DoiTac_Vung_SelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_DoiTac_Vung_SelectRowDeleted != null)) {
                    this.SP_DoiTac_Vung_SelectRowDeleted(this, new SP_DoiTac_Vung_SelectRowChangeEvent(((SP_DoiTac_Vung_SelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_DoiTac_Vung_SelectRowDeleting != null)) {
                    this.SP_DoiTac_Vung_SelectRowDeleting(this, new SP_DoiTac_Vung_SelectRowChangeEvent(((SP_DoiTac_Vung_SelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSP_DoiTac_Vung_SelectRow(SP_DoiTac_Vung_SelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport ds = new dsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_DoiTac_Vung_SelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KeHoachNhapXuatDataTable : global::System.Data.TypedTableBase<KeHoachNhapXuatRow> {
            
            private global::System.Data.DataColumn columnTenDoiTac;
            
            private global::System.Data.DataColumn columnSoLuong;
            
            private global::System.Data.DataColumn columnThongTinLienHe;
            
            private global::System.Data.DataColumn columnThoiGianDuKien;
            
            private global::System.Data.DataColumn columnThoiGianTrienKhai;
            
            private global::System.Data.DataColumn columnThoiGianHoanThanh;
            
            private global::System.Data.DataColumn columnPhuTrachTrienKhai;
            
            private global::System.Data.DataColumn columnTinhTrang;
            
            private global::System.Data.DataColumn columnGhiChu;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeHoachNhapXuatDataTable() {
                this.TableName = "KeHoachNhapXuat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KeHoachNhapXuatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KeHoachNhapXuatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenDoiTacColumn {
                get {
                    return this.columnTenDoiTac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoLuongColumn {
                get {
                    return this.columnSoLuong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThongTinLienHeColumn {
                get {
                    return this.columnThongTinLienHe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThoiGianDuKienColumn {
                get {
                    return this.columnThoiGianDuKien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThoiGianTrienKhaiColumn {
                get {
                    return this.columnThoiGianTrienKhai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThoiGianHoanThanhColumn {
                get {
                    return this.columnThoiGianHoanThanh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhuTrachTrienKhaiColumn {
                get {
                    return this.columnPhuTrachTrienKhai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TinhTrangColumn {
                get {
                    return this.columnTinhTrang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GhiChuColumn {
                get {
                    return this.columnGhiChu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeHoachNhapXuatRow this[int index] {
                get {
                    return ((KeHoachNhapXuatRow)(this.Rows[index]));
                }
            }
            
            public event KeHoachNhapXuatRowChangeEventHandler KeHoachNhapXuatRowChanging;
            
            public event KeHoachNhapXuatRowChangeEventHandler KeHoachNhapXuatRowChanged;
            
            public event KeHoachNhapXuatRowChangeEventHandler KeHoachNhapXuatRowDeleting;
            
            public event KeHoachNhapXuatRowChangeEventHandler KeHoachNhapXuatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKeHoachNhapXuatRow(KeHoachNhapXuatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeHoachNhapXuatRow AddKeHoachNhapXuatRow(string TenDoiTac, int SoLuong, string ThongTinLienHe, System.DateTime ThoiGianDuKien, System.DateTime ThoiGianTrienKhai, System.DateTime ThoiGianHoanThanh, string PhuTrachTrienKhai, string TinhTrang, string GhiChu) {
                KeHoachNhapXuatRow rowKeHoachNhapXuatRow = ((KeHoachNhapXuatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TenDoiTac,
                        SoLuong,
                        ThongTinLienHe,
                        ThoiGianDuKien,
                        ThoiGianTrienKhai,
                        ThoiGianHoanThanh,
                        PhuTrachTrienKhai,
                        TinhTrang,
                        GhiChu};
                rowKeHoachNhapXuatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKeHoachNhapXuatRow);
                return rowKeHoachNhapXuatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KeHoachNhapXuatDataTable cln = ((KeHoachNhapXuatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KeHoachNhapXuatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTenDoiTac = base.Columns["TenDoiTac"];
                this.columnSoLuong = base.Columns["SoLuong"];
                this.columnThongTinLienHe = base.Columns["ThongTinLienHe"];
                this.columnThoiGianDuKien = base.Columns["ThoiGianDuKien"];
                this.columnThoiGianTrienKhai = base.Columns["ThoiGianTrienKhai"];
                this.columnThoiGianHoanThanh = base.Columns["ThoiGianHoanThanh"];
                this.columnPhuTrachTrienKhai = base.Columns["PhuTrachTrienKhai"];
                this.columnTinhTrang = base.Columns["TinhTrang"];
                this.columnGhiChu = base.Columns["GhiChu"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTenDoiTac = new global::System.Data.DataColumn("TenDoiTac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDoiTac);
                this.columnSoLuong = new global::System.Data.DataColumn("SoLuong", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoLuong);
                this.columnThongTinLienHe = new global::System.Data.DataColumn("ThongTinLienHe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThongTinLienHe);
                this.columnThoiGianDuKien = new global::System.Data.DataColumn("ThoiGianDuKien", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoiGianDuKien);
                this.columnThoiGianTrienKhai = new global::System.Data.DataColumn("ThoiGianTrienKhai", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoiGianTrienKhai);
                this.columnThoiGianHoanThanh = new global::System.Data.DataColumn("ThoiGianHoanThanh", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoiGianHoanThanh);
                this.columnPhuTrachTrienKhai = new global::System.Data.DataColumn("PhuTrachTrienKhai", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhuTrachTrienKhai);
                this.columnTinhTrang = new global::System.Data.DataColumn("TinhTrang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTinhTrang);
                this.columnGhiChu = new global::System.Data.DataColumn("GhiChu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGhiChu);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeHoachNhapXuatRow NewKeHoachNhapXuatRow() {
                return ((KeHoachNhapXuatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KeHoachNhapXuatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KeHoachNhapXuatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KeHoachNhapXuatRowChanged != null)) {
                    this.KeHoachNhapXuatRowChanged(this, new KeHoachNhapXuatRowChangeEvent(((KeHoachNhapXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KeHoachNhapXuatRowChanging != null)) {
                    this.KeHoachNhapXuatRowChanging(this, new KeHoachNhapXuatRowChangeEvent(((KeHoachNhapXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KeHoachNhapXuatRowDeleted != null)) {
                    this.KeHoachNhapXuatRowDeleted(this, new KeHoachNhapXuatRowChangeEvent(((KeHoachNhapXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KeHoachNhapXuatRowDeleting != null)) {
                    this.KeHoachNhapXuatRowDeleting(this, new KeHoachNhapXuatRowChangeEvent(((KeHoachNhapXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKeHoachNhapXuatRow(KeHoachNhapXuatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport ds = new dsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KeHoachNhapXuatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NhatKyCaiDatPMDataTable : global::System.Data.TypedTableBase<NhatKyCaiDatPMRow> {
            
            private global::System.Data.DataColumn columnNgayLap;
            
            private global::System.Data.DataColumn columnNguoiPheDuyet;
            
            private global::System.Data.DataColumn columnNguoiLap;
            
            private global::System.Data.DataColumn columnTenDoiTac;
            
            private global::System.Data.DataColumn columnSo_Luong;
            
            private global::System.Data.DataColumn columnMa_Serial;
            
            private global::System.Data.DataColumn columnMa_MAC;
            
            private global::System.Data.DataColumn columnMa_DLK;
            
            private global::System.Data.DataColumn columnDien_Giai;
            
            private global::System.Data.DataColumn columngr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NhatKyCaiDatPMDataTable() {
                this.TableName = "NhatKyCaiDatPM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NhatKyCaiDatPMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NhatKyCaiDatPMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NgayLapColumn {
                get {
                    return this.columnNgayLap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NguoiPheDuyetColumn {
                get {
                    return this.columnNguoiPheDuyet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NguoiLapColumn {
                get {
                    return this.columnNguoiLap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenDoiTacColumn {
                get {
                    return this.columnTenDoiTac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn So_LuongColumn {
                get {
                    return this.columnSo_Luong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ma_SerialColumn {
                get {
                    return this.columnMa_Serial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ma_MACColumn {
                get {
                    return this.columnMa_MAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ma_DLKColumn {
                get {
                    return this.columnMa_DLK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dien_GiaiColumn {
                get {
                    return this.columnDien_Giai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grColumn {
                get {
                    return this.columngr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NhatKyCaiDatPMRow this[int index] {
                get {
                    return ((NhatKyCaiDatPMRow)(this.Rows[index]));
                }
            }
            
            public event NhatKyCaiDatPMRowChangeEventHandler NhatKyCaiDatPMRowChanging;
            
            public event NhatKyCaiDatPMRowChangeEventHandler NhatKyCaiDatPMRowChanged;
            
            public event NhatKyCaiDatPMRowChangeEventHandler NhatKyCaiDatPMRowDeleting;
            
            public event NhatKyCaiDatPMRowChangeEventHandler NhatKyCaiDatPMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNhatKyCaiDatPMRow(NhatKyCaiDatPMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NhatKyCaiDatPMRow AddNhatKyCaiDatPMRow(System.DateTime NgayLap, string NguoiPheDuyet, string NguoiLap, string TenDoiTac, int So_Luong, string Ma_Serial, string Ma_MAC, string Ma_DLK, string Dien_Giai, string gr) {
                NhatKyCaiDatPMRow rowNhatKyCaiDatPMRow = ((NhatKyCaiDatPMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NgayLap,
                        NguoiPheDuyet,
                        NguoiLap,
                        TenDoiTac,
                        So_Luong,
                        Ma_Serial,
                        Ma_MAC,
                        Ma_DLK,
                        Dien_Giai,
                        gr};
                rowNhatKyCaiDatPMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNhatKyCaiDatPMRow);
                return rowNhatKyCaiDatPMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NhatKyCaiDatPMDataTable cln = ((NhatKyCaiDatPMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NhatKyCaiDatPMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNgayLap = base.Columns["NgayLap"];
                this.columnNguoiPheDuyet = base.Columns["NguoiPheDuyet"];
                this.columnNguoiLap = base.Columns["NguoiLap"];
                this.columnTenDoiTac = base.Columns["TenDoiTac"];
                this.columnSo_Luong = base.Columns["So_Luong"];
                this.columnMa_Serial = base.Columns["Ma_Serial"];
                this.columnMa_MAC = base.Columns["Ma_MAC"];
                this.columnMa_DLK = base.Columns["Ma_DLK"];
                this.columnDien_Giai = base.Columns["Dien_Giai"];
                this.columngr = base.Columns["gr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNgayLap = new global::System.Data.DataColumn("NgayLap", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayLap);
                this.columnNguoiPheDuyet = new global::System.Data.DataColumn("NguoiPheDuyet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNguoiPheDuyet);
                this.columnNguoiLap = new global::System.Data.DataColumn("NguoiLap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNguoiLap);
                this.columnTenDoiTac = new global::System.Data.DataColumn("TenDoiTac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDoiTac);
                this.columnSo_Luong = new global::System.Data.DataColumn("So_Luong", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSo_Luong);
                this.columnMa_Serial = new global::System.Data.DataColumn("Ma_Serial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa_Serial);
                this.columnMa_MAC = new global::System.Data.DataColumn("Ma_MAC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa_MAC);
                this.columnMa_DLK = new global::System.Data.DataColumn("Ma_DLK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa_DLK);
                this.columnDien_Giai = new global::System.Data.DataColumn("Dien_Giai", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDien_Giai);
                this.columngr = new global::System.Data.DataColumn("gr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngr);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NhatKyCaiDatPMRow NewNhatKyCaiDatPMRow() {
                return ((NhatKyCaiDatPMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NhatKyCaiDatPMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NhatKyCaiDatPMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NhatKyCaiDatPMRowChanged != null)) {
                    this.NhatKyCaiDatPMRowChanged(this, new NhatKyCaiDatPMRowChangeEvent(((NhatKyCaiDatPMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NhatKyCaiDatPMRowChanging != null)) {
                    this.NhatKyCaiDatPMRowChanging(this, new NhatKyCaiDatPMRowChangeEvent(((NhatKyCaiDatPMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NhatKyCaiDatPMRowDeleted != null)) {
                    this.NhatKyCaiDatPMRowDeleted(this, new NhatKyCaiDatPMRowChangeEvent(((NhatKyCaiDatPMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NhatKyCaiDatPMRowDeleting != null)) {
                    this.NhatKyCaiDatPMRowDeleting(this, new NhatKyCaiDatPMRowChangeEvent(((NhatKyCaiDatPMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNhatKyCaiDatPMRow(NhatKyCaiDatPMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport ds = new dsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NhatKyCaiDatPMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SP_DoiTac_Vung_SelectRow : global::System.Data.DataRow {
            
            private SP_DoiTac_Vung_SelectDataTable tableSP_DoiTac_Vung_Select;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SP_DoiTac_Vung_SelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_DoiTac_Vung_Select = ((SP_DoiTac_Vung_SelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid DoiTac_Vung_Id {
                get {
                    return ((global::System.Guid)(this[this.tableSP_DoiTac_Vung_Select.DoiTac_Vung_IdColumn]));
                }
                set {
                    this[this.tableSP_DoiTac_Vung_Select.DoiTac_Vung_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDoiTac {
                get {
                    try {
                        return ((string)(this[this.tableSP_DoiTac_Vung_Select.TenDoiTacColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenDoiTac\' in table \'SP_DoiTac_Vung_Select\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_DoiTac_Vung_Select.TenDoiTacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenVung {
                get {
                    try {
                        return ((string)(this[this.tableSP_DoiTac_Vung_Select.TenVungColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenVung\' in table \'SP_DoiTac_Vung_Select\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_DoiTac_Vung_Select.TenVungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenDoiTacNull() {
                return this.IsNull(this.tableSP_DoiTac_Vung_Select.TenDoiTacColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenDoiTacNull() {
                this[this.tableSP_DoiTac_Vung_Select.TenDoiTacColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenVungNull() {
                return this.IsNull(this.tableSP_DoiTac_Vung_Select.TenVungColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenVungNull() {
                this[this.tableSP_DoiTac_Vung_Select.TenVungColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KeHoachNhapXuatRow : global::System.Data.DataRow {
            
            private KeHoachNhapXuatDataTable tableKeHoachNhapXuat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KeHoachNhapXuatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKeHoachNhapXuat = ((KeHoachNhapXuatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDoiTac {
                get {
                    try {
                        return ((string)(this[this.tableKeHoachNhapXuat.TenDoiTacColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenDoiTac\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.TenDoiTacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SoLuong {
                get {
                    try {
                        return ((int)(this[this.tableKeHoachNhapXuat.SoLuongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoLuong\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.SoLuongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThongTinLienHe {
                get {
                    try {
                        return ((string)(this[this.tableKeHoachNhapXuat.ThongTinLienHeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThongTinLienHe\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.ThongTinLienHeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ThoiGianDuKien {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableKeHoachNhapXuat.ThoiGianDuKienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThoiGianDuKien\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.ThoiGianDuKienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ThoiGianTrienKhai {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableKeHoachNhapXuat.ThoiGianTrienKhaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThoiGianTrienKhai\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.ThoiGianTrienKhaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ThoiGianHoanThanh {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableKeHoachNhapXuat.ThoiGianHoanThanhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThoiGianHoanThanh\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.ThoiGianHoanThanhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhuTrachTrienKhai {
                get {
                    try {
                        return ((string)(this[this.tableKeHoachNhapXuat.PhuTrachTrienKhaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhuTrachTrienKhai\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.PhuTrachTrienKhaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TinhTrang {
                get {
                    try {
                        return ((string)(this[this.tableKeHoachNhapXuat.TinhTrangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TinhTrang\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.TinhTrangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GhiChu {
                get {
                    try {
                        return ((string)(this[this.tableKeHoachNhapXuat.GhiChuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GhiChu\' in table \'KeHoachNhapXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeHoachNhapXuat.GhiChuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenDoiTacNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.TenDoiTacColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenDoiTacNull() {
                this[this.tableKeHoachNhapXuat.TenDoiTacColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoLuongNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.SoLuongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoLuongNull() {
                this[this.tableKeHoachNhapXuat.SoLuongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThongTinLienHeNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.ThongTinLienHeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThongTinLienHeNull() {
                this[this.tableKeHoachNhapXuat.ThongTinLienHeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoiGianDuKienNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.ThoiGianDuKienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoiGianDuKienNull() {
                this[this.tableKeHoachNhapXuat.ThoiGianDuKienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoiGianTrienKhaiNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.ThoiGianTrienKhaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoiGianTrienKhaiNull() {
                this[this.tableKeHoachNhapXuat.ThoiGianTrienKhaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoiGianHoanThanhNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.ThoiGianHoanThanhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoiGianHoanThanhNull() {
                this[this.tableKeHoachNhapXuat.ThoiGianHoanThanhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhuTrachTrienKhaiNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.PhuTrachTrienKhaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhuTrachTrienKhaiNull() {
                this[this.tableKeHoachNhapXuat.PhuTrachTrienKhaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTinhTrangNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.TinhTrangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTinhTrangNull() {
                this[this.tableKeHoachNhapXuat.TinhTrangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGhiChuNull() {
                return this.IsNull(this.tableKeHoachNhapXuat.GhiChuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGhiChuNull() {
                this[this.tableKeHoachNhapXuat.GhiChuColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NhatKyCaiDatPMRow : global::System.Data.DataRow {
            
            private NhatKyCaiDatPMDataTable tableNhatKyCaiDatPM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NhatKyCaiDatPMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNhatKyCaiDatPM = ((NhatKyCaiDatPMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayLap {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNhatKyCaiDatPM.NgayLapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NgayLap\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.NgayLapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NguoiPheDuyet {
                get {
                    try {
                        return ((string)(this[this.tableNhatKyCaiDatPM.NguoiPheDuyetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NguoiPheDuyet\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.NguoiPheDuyetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NguoiLap {
                get {
                    try {
                        return ((string)(this[this.tableNhatKyCaiDatPM.NguoiLapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NguoiLap\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.NguoiLapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDoiTac {
                get {
                    try {
                        return ((string)(this[this.tableNhatKyCaiDatPM.TenDoiTacColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenDoiTac\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.TenDoiTacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int So_Luong {
                get {
                    try {
                        return ((int)(this[this.tableNhatKyCaiDatPM.So_LuongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'So_Luong\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.So_LuongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ma_Serial {
                get {
                    try {
                        return ((string)(this[this.tableNhatKyCaiDatPM.Ma_SerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ma_Serial\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.Ma_SerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ma_MAC {
                get {
                    try {
                        return ((string)(this[this.tableNhatKyCaiDatPM.Ma_MACColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ma_MAC\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.Ma_MACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ma_DLK {
                get {
                    try {
                        return ((string)(this[this.tableNhatKyCaiDatPM.Ma_DLKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ma_DLK\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.Ma_DLKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dien_Giai {
                get {
                    try {
                        return ((string)(this[this.tableNhatKyCaiDatPM.Dien_GiaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dien_Giai\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.Dien_GiaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gr {
                get {
                    try {
                        return ((string)(this[this.tableNhatKyCaiDatPM.grColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gr\' in table \'NhatKyCaiDatPM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNhatKyCaiDatPM.grColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayLapNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.NgayLapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayLapNull() {
                this[this.tableNhatKyCaiDatPM.NgayLapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNguoiPheDuyetNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.NguoiPheDuyetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNguoiPheDuyetNull() {
                this[this.tableNhatKyCaiDatPM.NguoiPheDuyetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNguoiLapNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.NguoiLapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNguoiLapNull() {
                this[this.tableNhatKyCaiDatPM.NguoiLapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenDoiTacNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.TenDoiTacColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenDoiTacNull() {
                this[this.tableNhatKyCaiDatPM.TenDoiTacColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSo_LuongNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.So_LuongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSo_LuongNull() {
                this[this.tableNhatKyCaiDatPM.So_LuongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMa_SerialNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.Ma_SerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMa_SerialNull() {
                this[this.tableNhatKyCaiDatPM.Ma_SerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMa_MACNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.Ma_MACColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMa_MACNull() {
                this[this.tableNhatKyCaiDatPM.Ma_MACColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMa_DLKNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.Ma_DLKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMa_DLKNull() {
                this[this.tableNhatKyCaiDatPM.Ma_DLKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDien_GiaiNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.Dien_GiaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDien_GiaiNull() {
                this[this.tableNhatKyCaiDatPM.Dien_GiaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrNull() {
                return this.IsNull(this.tableNhatKyCaiDatPM.grColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrNull() {
                this[this.tableNhatKyCaiDatPM.grColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SP_DoiTac_Vung_SelectRowChangeEvent : global::System.EventArgs {
            
            private SP_DoiTac_Vung_SelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_DoiTac_Vung_SelectRowChangeEvent(SP_DoiTac_Vung_SelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_DoiTac_Vung_SelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KeHoachNhapXuatRowChangeEvent : global::System.EventArgs {
            
            private KeHoachNhapXuatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeHoachNhapXuatRowChangeEvent(KeHoachNhapXuatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeHoachNhapXuatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NhatKyCaiDatPMRowChangeEvent : global::System.EventArgs {
            
            private NhatKyCaiDatPMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NhatKyCaiDatPMRowChangeEvent(NhatKyCaiDatPMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NhatKyCaiDatPMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591